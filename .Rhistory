# Solution of Problem 4
library(tibble)
routes <-
tibble::tibble(
route = c("City A -> B", "City B -> C", "City A -> C"),
distance = c(350, 500, 750),
ferries = c(1, 2, 3),
tolls = c(3, 5, 6)
)
routes
# Solution of Problem 4
routes_df <-
tibble::tibble(
route = c("City A -> B", "City B -> C", "City A -> C"),
distance = c(350, 500, 750),
ferries = c(1, 2, 3),
tolls = c(3, 5, 6)
)
rm(routes)
?list()
vehicle_type_list <-
list(
et = c("Energy cost per km": 0.2,
"Price per ferry ride": 180,
"Toll cost per station": 40)
)
list(
et = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40)
)
list(
et = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
dt = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
list(
ET = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
DT = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
vehicle_type_cost_list <-
list(
ET = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
DT = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
class(vehicle_type_cost_list)
class(routes_df)
routes_df
vehicle_type_cost_list
350*0.2+180*1+40*3
350*1.5+300*1+80*3
routes_df
vehicle_type_cost_list
routes_df[1,]
vehicle_type_cost_list[1]
vehicle_type_cost_list[[1]]
routes_df[[1,]]
routes_df[1,] * vehicle_type_cost_list[[1]]
purrr::map2(routes_df,vehicle_type_cost_list,sum)
vehicle_type_cost_list[[1]]
print(i)
for(i in vehicle_type_cost_list[[1]]) {
print(i)
}
for(i in vehicle_type_cost_list[[1]]) {
et_total = i * routes_df[1,]
}
routes_df[1,]
for (j in routes_df) {
print(j
for (j in routes_df) {
for (j in routes_df) {
print(j)
}
for (j in 1:length(routes_df)) {
print(j)
}
for (j in routes_df {
for (j in routes_df) {
print(j)
}
for (j in rowwise(routes_df)) {
print(j)
}
for (j in routes_df[1,]) {
print(j)
}
for (j in routes_df[1,2:]) {
for (j in routes_df[1,c(2,3,4)]) {
print(j)
}
for (j in routes_df[1,c(2,3,4)]) {
print(j)
}
for (i in vehicle_type_cost_list[[1]]) {
print(i)
}
for(i in vehicle_type_cost_list[[1]]) {
for (j in routes_df[1,c(2,3,4)]) {
i *j
}
}
for(i in vehicle_type_cost_list[[1]]) {
et_total = 0
for (j in routes_df[1,c(2,3,4)]) {
et_total = et_total +i * j
}
}
vehicle_type_cost_list[[1]]
routes_df[1,c(2,3,4)]
350*0.2+180*1+40*3
180*350
library(magrittr)
routes_df[1,]
routes_df[1,][1]
routes_df[1,][2:]
routes_df[1,][c(2,3,4)]
routes_df[1,][[c(2,3,4)]]
routes_df
vehicle_type_cost_list
routes_df %>%
mutate(
ET_cost = (distance * vehicle_type_cost_list$ET$`Energy cost per km`) +
(ferries * vehicle_type_cost_list$ET$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$ET$`Toll cost per station`),
DT_cost = (distance * vehicle_type_cost_list$DT$`Fuel cost per km`) +
(ferries * vehicle_type_cost_list$DT$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$DT$`Toll cost per station`)
)
library(dplyr)
routes_df %>%
mutate(
ET_cost = (distance * vehicle_type_cost_list$ET$`Energy cost per km`) +
(ferries * vehicle_type_cost_list$ET$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$ET$`Toll cost per station`),
DT_cost = (distance * vehicle_type_cost_list$DT$`Fuel cost per km`) +
(ferries * vehicle_type_cost_list$DT$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$DT$`Toll cost per station`)
)
library(dplyr)
routes_df %>%
mutate(
ET_cost = (distance * vehicle_type_cost_list$ET$`Energy cost per km`) +
(ferries * vehicle_type_cost_list$ET$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$ET$`Toll cost per station`),
DT_cost = (distance * vehicle_type_cost_list$DT$`Fuel cost per km`) +
(ferries * vehicle_type_cost_list$DT$`Price per ferry ride`) +
(tolls * vehicle_type_cost_list$DT$`Toll cost per station`)
)
vehicle_type_cost_list$ET
vehicle_type_cost_list$ET$"Energy cost per km")
vehicle_type_cost_list$ET$"Energy cost per km"
vehicle_type_cost_list$ET$["Energy cost per km"]
vehicle_type_cost_list$ET$["Energy cost per km"]
vehicle_type_cost_list$ET
vehicle_type_cost_list$ET[1]
routes_df
vehicle_type_cost_list
750*1.5 + 3*300 + 6*80
vehicle_type_cost_list[[1]]
vehicle_type_cost_list[[1]][1]
routes_df$distance[1]
vehicle_type_cost_list[[1]][1]
vehicle_type_cost_list[[1]][1] * routes_df$distance[1]
vehicle_type_cost_list[[1]][1] * routes_df$distance[1]
routes_df$distance[1]
0.2*350
routes_df$distance[2]
vehicle_type_cost_list[[1]][2]
routes_df$ferries[1]
vehicle_type_cost_list[[1]][2]
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1]
vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1]
vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1]
vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1]
vehicle_type_cost_list[[2]][1]
vehicle_type_cost_list[[2]][2]
vehicle_type_cost_list[[2]][3]
vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1]
vehicle_type_cost_list
routes_df
350*1.5 + 300 + 80*3
vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1]
as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1])
vehicle_type_cost_list[[3]][1]
as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[2])
as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[3])
as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[3])
as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[2])
as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
et_route_ab <- as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1])
et_route_bc <- as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[2])
et_route_ac <- as.integer(vehicle_type_cost_list[[1]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[3])
# DT
dt_route_ab <- as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
dt_route_bc <- as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[2])
dt_route_ac <- as.integer(vehicle_type_cost_list[[2]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[3])
routes_df %>%
mutate(et_total = c(et_route_ab, et_route_bc, et_route_ac),
dt_total = c(dt_route_ab, dt_route_bc, dt_route_ac))
routes <- routes_df %>%
mutate(et_total = c(et_route_ab, et_route_bc, et_route_ac),
dt_total = c(dt_route_ab, dt_route_bc, dt_route_ac))
routes_df <- routes_df %>%
mutate(et_total = c(et_route_ab, et_route_bc, et_route_ac),
dt_total = c(dt_route_ab, dt_route_bc, dt_route_ac))
rm(routes)
routes_df
routes_df %>%
mutate(savings = dt_total - et_total)
#------------ a)
routes_df <-
tibble::tibble(
route = c("City A -> B", "City B -> C", "City A -> C"),
distance = c(350, 500, 750),
ferries = c(1, 2, 3),
tolls = c(3, 5, 6)
)
vehicle_type_cost_list <-
list(
ET = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
DT = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
# ET
et_route_ab <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1])
et_route_bc <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[2])
et_route_ac <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[3])
# DT
dt_route_ab <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
dt_route_bc <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[2])
dt_route_ac <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[3])
routes_df %>%
mutate(et_total = c(et_route_ab, et_route_bc, et_route_ac),
dt_total = c(dt_route_ab, dt_route_bc, dt_route_ac))
routes_df <- routes_df %>%
mutate(et_total = c(et_route_ab, et_route_bc, et_route_ac),
dt_total = c(dt_route_ab, dt_route_bc, dt_route_ac))
routes_df %>%
mutate(savings = dt_total - et_total)
#------------ a)
routes_df <-
tibble::tibble(
route = c("City A -> B", "City B -> C", "City A -> C"),
distance = c(350, 500, 750),
ferries = c(1, 2, 3),
tolls = c(3, 5, 6)
)
vehicle_type_cost_list <-
list(
ET = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
DT = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
# ET
et_route_ab <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[1])
et_route_bc <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[2])
et_route_ac <- as.double(vehicle_type_cost_list[[1]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[1]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[1]][3] * routes_df$tolls[3])
dt_route_ab <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[1] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[1] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[1])
dt_route_bc <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[2] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[2] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[2])
dt_route_ac <- as.double(vehicle_type_cost_list[[2]][1] * routes_df$distance[3] +
vehicle_type_cost_list[[2]][2] * routes_df$ferries[3] +
vehicle_type_cost_list[[2]][3] * routes_df$tolls[3])
routes_df$et_total <- c(et_route_ab, et_route_bc, et_route_ac)
routes_df$dt_total <- c(dt_route_ab, dt_route_bc, dt_route_ac)
routes_df
routes_df$savings <- dt_total - et_total
routes_df
# alternatively:
routes_df$savings <- routes_df$dt_total - routes_df$et_total
routes_df
vehicle_type_cost_list
routes_df
#------------ a)
routes_df <-
tibble::tibble(
route = c("City A -> B", "City B -> C", "City A -> C"),
distance = c(350, 500, 750),
ferries = c(1, 2, 3),
tolls = c(3, 5, 6)
)
vehicle_type_cost_list <-
list(
ET = c("Energy cost per km" = 0.2,
"Price per ferry ride" = 180,
"Toll cost per station" = 40),
DT = c("Fuel cost per km" = 1.5,
"Price per ferry ride" = 300,
"Toll cost per station" = 80)
)
vehicle_type_cost_list
routes_df
as.data.frame(vehicle_type_cost_list)
vehicle_type_cost_df <- as.data.frame(vehicle_type_cost_list)
full_join(routes_df, vehicle_type_cost_df)
?full_join
routes_df[1,c(2,3,4)]
routes_df[1,c(2,3,4)] * vehicle_type_cost_df$ET
sum(routes_df[1,c(2,3,4)] * vehicle_type_cost_df$ET)
routes_df[1,c(2,3,4)]
vehicle_type_cost_df$ET
routes_df[1,c(2,3,4)] * vehicle_type_cost_df$ET
for(i in 1:lengtgh(routes_df)) {
et_total <- vector(mode = "double")
et_total <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
for(i in 1:length(routes_df)) {
et_total <- vector(mode = "double")
et_total <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
1:length(routes_df)
2:length(routes_df)
for(i in 2:length(routes_df)) {
et_total <- vector(mode = "double")
et_total <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
sum(routes_df[1,c(2,3,4)] * vehicle_type_cost_df$ET)
sum(routes_df[2,c(2,3,4)] * vehicle_type_cost_df$ET)
sum(routes_df[3,c(2,3,4)] * vehicle_type_cost_df$ET)
for(i in :length(routes_df)) {
for(i in 1:length(routes_df)) {
et_total <- vector(mode = "double", length = 3)
et_total <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
vector(mode = "double", length = 3)
for(i in 1:length(routes_df)) {
et_total <- vector(mode = "double", length = 3)
et_total[i] <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
for(i in 1:length(routes_df)) {
et_total <- vector(mode = "double", length = 3)
et_total[i] <- sum(routes_df[i,c(2,3,4)] * vehicle_type_cost_df$ET)
return(et_total)
}
et_total
